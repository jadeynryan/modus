---
title: "Soil Health Hackathon Demo"
date: "`r Sys.Date()`"
execute:
  echo: false
  warning: false
  output: true
format: 
  html:
    toc: true
    toc-location: left
---

```{r}
#| label: parse json files and load libraries

source(paste0(here::here(), "/R/01_parseJSON.R"))

```

## Map

Include a brief summary of the map and how to interact with it

```{r}
#| label: map

source(paste0(here::here(), "/R/02_map.R"))
m

```

## Placeholder for Select Input

This is where shiny reactivity can be implemented to allow the user to select which samples they would like to compare against the broader distribution within the dataset.

```{r}
# shinyWidgets::virtualSelectInput(inputId = "sampleID", 
#                                  label = "Select your samples of interest.",
#                                  choices = df$UniqueSampleID,
#                                  multiple = TRUE)

# dummy selected sampleIDs

selected <- c(
    "2015-02-16_TOKA-001",
    "2015-02-16_TOKA-035",
    "2015-02-16_TOKA-091")

```

**You selected the following sample IDs:** <br> `r {selected}`.

## Texture

Brief description of texture.

**Texture class abbreviations:**

-   Cl = Clay
-   Sa = Sand(y)
-   Lo = Loam(y)
-   Si = Silt(y)

::: panel-tabset
## Texture Triangles

```{r}
#| label: texture triangles
#| fig-width: 3
#| layout-ncol: 2

source(paste0(here::here(), "/R/03_texture.R"))

# create texture triangle for all points in dataset

makeTriangle(
  data = dfTexture,
  title = "Texture for all samples",
  color = "#d55e00"
)

# select and plot specific samples

selectedTexture <- subset(
  dfTexture,
  UNIQUESAMPLEID %in% selected
)

makeTriangle(
  data = selectedTexture,
  title = "Texture for selected samples",
  color = "#0072b2"
)


```

## Table

```{r}
#| label: texture table

textureDT

```
:::

## Charts

Include a brief summary of the charts and how to interact with them (for example, click on the camera icon to download the chart as a .png or click on the legend items to toggle them within the chart).

```{r}
#| label: set up functions for plotting

source(paste0(here::here(), "/R/04_plot.R"))

```

#### Bulk Density in g/cm3

Brief description of this parameter.

```{r}
#| label: BulkDensity plot

BulkDensity <- tidyr::all_of(selectVar(selectedVar = "BulkDensity"))

plotVar(df = BulkDensity,
        yaxisTitle = "Bulk Density (g/cm3)")

```

#### pH

Brief description of this parameter.

```{r}
#| label: pH plot

pH <- tidyr::all_of(selectVar(selectedVar = "pH"))

plotVar(df = pH,
        yaxisTitle = "pH")

```

#### Cation Exchange Capacity (CEC) in cmol(+)/kg

Brief description of this parameter.

```{r}
#| label: CEC plot

CEC <- tidyr::all_of(selectVar(selectedVar = "CEC"))

plotVar(df = CEC,
        yaxisTitle = "CEC (cmol(+)/kg")

```

#### Total Organic Carbon (TOC) %

Brief description of this parameter.

```{r}
#| label: TOC plot

TOC <- tidyr::all_of(selectVar(selectedVar = "TOC"))

plotVar(df = TOC,
        yaxisTitle = "TOC (%)")

```

#### Calcium (Ca) in cmol(+)/kg

Brief description of nutrients parameters.

```{r}
#| label: Ca plot

Ca <- tidyr::all_of(selectVar(selectedVar = "Ca"))

plotVar(df = Ca,
        yaxisTitle = "Ca (cmol(+)/kg)")

```

#### Magnesium (Mg) in cmol(+)/kg

Brief description of nutrients parameters.

```{r}
#| label: Mg plot

Mg <- tidyr::all_of(selectVar(selectedVar = "Mg"))

plotVar(df = Mg,
        yaxisTitle = "Mg (cmol(+)/kg)")

```

#### Potassium (K) in cmol(+)/kg

Brief description of nutrients parameters.

```{r}
#| label: K plot

K <- tidyr::all_of(selectVar(selectedVar = "K"))

plotVar(df = K,
        yaxisTitle = "K (cmol(+)/kg)")

```

#### Sodium (Na) in cmol(+)/kg

Brief description of nutrients parameters.

```{r}
#| label: Na plot
Na <- tidyr::all_of(selectVar(selectedVar = "Na"))

plotVar(df = Na,
        yaxisTitle = "Na (cmol(+)/kg)")

```

::: {.column-page}

## Table

Brief description of full table and interactivity.

```{r}
#| label: full table

source(paste0(here::here(), "/R/05_DT.R"))

allDT

```

:::